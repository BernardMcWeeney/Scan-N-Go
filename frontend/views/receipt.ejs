<%- include('partials/head.ejs') %>
<%- include('partials/header.ejs') %>

<style>

body {
    padding-bottom:100px
}
.card {
    position: relative;
    display: flex;
    flex-direction: column;
    min-width: 0;
    word-wrap: break-word;
    background-color: #fff;
    background-clip: border-box;
    border: 1px solid rgba(0, 0, 0, 0.1);
    border-radius: 0.37rem;
}

.card:hover {
    box-shadow: 0 10px 20px rgba(0, 0, 0, .12), 0 4px 8px rgba(0, 0, 0, .06)
}
.tag {
    display: inline-block;
    padding: 3px 7px;
    background: #f2f2f2;
    border: 1px solid #eee;
    border-radius: 3px;
    margin-top: 4px;
    margin-right: 2px;
    font-size: 85%;
}
.card-product-grid .bottom-wrap {
    padding: 18px;
    border-top: 1px solid #e4e4e4;
}
.card-product-grid .info-wrap {
    overflow: hidden;
    padding: 18px 20px;
}

.btn-primary {
  background-color: #630436;
  color:#FFF;
  border-color: #630436;
}
.btn-primary:hover, .btn-primary:focus, .btn-primary:active, .btn-primary.active, .open .dropdown-toggle.btn-default {
  background-color: #fff;
  color:#630436;
  border-color: #630436;
 }
a:not([href]):not([tabindex]) {
    color:#fff;
}
.btn-outline-primary {
    background-color: #630436;
    color:#FFF;
    border-color: #630436;
}
.btn-outline-primary:hover, .btn-outline-primary.active {
    color:#630436;
    border-color: #630436;
    background-color: transparent;
    background-image: none;
}
.btn-outline-primary:not(:disabled):not(.disabled).active, .show > .btn-outline-primary.dropdown-toggle {
    color:#630436;
    border-color: #630436;
    background-color: transparent;
    background-image: none;
}
.searchproduct {
    margin-left: 10px;
}

.filtersidebar {
    margin-bottom: 50px;
}
#overlay {
  position: fixed; /* Sit on top of the page content */
  display: none; /* Hidden by default */
  width: 100%; /* Full width (cover the whole page) */
  height: 100%; /* Full height (cover the whole page) */
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0,0,0,0.5); /* Black background with opacity */
  z-index: 2; /* Specify a stack order in case you're using a different order for other elements */
  cursor: pointer; /* Add a pointer on hover */
}
#text{
  position: absolute;
  top: 50%;
  left: 50%;
  font-size: 50px;
  color: white;
  transform: translate(-50%,-50%);
  -ms-transform: translate(-50%,-50%);
}
.creditcarddiv {
    position: fixed;
    bottom: 40px;
    width: 100%;
}


</style>

<h3 id="user-welcome-message" class="display-4 text-center">Your Digital Receipt</h3>
<p class="lead text-center">Here is a copy of your receipt. Thanks for using Scan-N-Go!</p>
<div class="container">
	<main>
		<article class="card">
            <header class="card-header">
                <strong class="d-inline-block mr-3">Order ID: </strong>
                <span>Order Date: 16 December 2018</span>
            </header>
		<div class="card-body">
			<div class="row">
				<div class="col-md-8">
					<h6 class="text-muted">Delivery to</h6>
					<p>Username: <br>
					  Email: myname@pixsellz.com <br>
			 		</p>
				</div>
				<div class="col-md-4">
					<h6 class="text-muted">Payment</h6>
					<span class="text-success">
						<i class="fab fa-lg fa-cc-visa"></i>
					    Digital Payment
					</span>
					 <span class="b">Total:  $X </span>
					</p>
				</div>
			</div> <!-- row.// -->
		</div> <!-- card-body .// -->
		<div class="table-responsive">
		<table class="table table-hover">
			<tbody><tr>
				<td width="65">
					<img src="http://127.0.0.1:8000/media/images/5449000131805_3.JPG" width="50" height="50" class="img-xs border">
				</td>
				<td>
					<p class="title mb-0">Product name goes here </p>
					<var class="price text-muted">USD 145</var>
				</td>
				<td> Seller <br> Nike clothing </td>
				<td width="250"> <a href="#" class="btn btn-outline-primary">Track order</a> <a href="#" class="btn btn-light"> Details </a> </td>
			</tr>
			<tr>
				<td>
					<img src="http://127.0.0.1:8000/media/images/5449000131805_3.JPG" width="50" height="50" class="img-xs border">
				</td>
				<td>
					<p class="title mb-0">Another name goes here </p>
					<var class="price text-muted">USD 15</var>
				</td>
				<td> Seller <br> ABC shop </td>
				<td> <a href="#" class="btn btn-outline-primary">Track order</a> <a href="#" class="btn btn-light"> Details </a> </td>
			</tr>
			<tr>
				<td>
					<img src="http://127.0.0.1:8000/media/images/5449000131805_3.JPG" width="50" height="50" class="img-xs border">
				</td>
				<td>
					<p class="title mb-0">The name of the product  goes here </p>
					<var class="price text-muted">USD 145</var>
				</td>
				<td> Seller <br> Wallmart </td>
				<td> <a href="#" class="btn btn-outline-primary">Track order</a> <a href="#" class="btn btn-light"> Details </a> </td>
			</tr>
		</tbody></table>
		</div> <!-- table-responsive .end// -->
		</article> <!-- order-group.// -->
	</main>
</div>
<div class="container">
	<main class="OrderData">
		<article class="card ">
            <header class="card-header">
                <strong class="d-inline-block mr-3">Order ID: </strong>
                <span>Order Date: 16 December 2018</span>
            </header>
		<div class="card-body">
			<div class="row">
				<div class="col-md-8">
					<h6 class="text-muted">Delivery to</h6>
					<p>Username: <br>
					  Email: myname@pixsellz.com <br>
			 		</p>
				</div>
				<div class="col-md-4">
					<h6 class="text-muted">Payment</h6>
					<span class="text-success">
						<i class="fab fa-lg fa-cc-visa"></i>
					    Digital Payment
					</span>
					 <span class="b">Total:  $X </span>
					</p>
				</div>
			</div> <!-- row.// -->
		</div> <!-- card-body .// -->
		<div class="table-responsive">
		<table class="table table-hover">
			<tbody><tr>
				<td width="65">
					<img src="http://127.0.0.1:8000/media/images/5449000131805_3.JPG" width="50" height="50" class="img-xs border">
				</td>
				<td>
					<p class="title mb-0">Product name goes here </p>
					<var class="price text-muted">USD 145</var>
				</td>
				<td> Seller <br> Nike clothing </td>
				<td width="250"> <a href="#" class="btn btn-outline-primary">Track order</a> <a href="#" class="btn btn-light"> Details </a> </td>
			</tr>
			<tr>
				<td>
					<img src="http://127.0.0.1:8000/media/images/5449000131805_3.JPG" width="50" height="50" class="img-xs border">
				</td>
				<td>
					<p class="title mb-0">Another name goes here </p>
					<var class="price text-muted">USD 15</var>
				</td>
				<td> Seller <br> ABC shop </td>
				<td> <a href="#" class="btn btn-outline-primary">Track order</a> <a href="#" class="btn btn-light"> Details </a> </td>
			</tr>
			<tr>
				<td>
					<img src="http://127.0.0.1:8000/media/images/5449000131805_3.JPG" width="50" height="50" class="img-xs border">
				</td>
				<td>
					<p class="title mb-0">The name of the product  goes here </p>
					<var class="price text-muted">USD 145</var>
				</td>
				<td> Seller <br> Wallmart </td>
				<td> <a href="#" class="btn btn-outline-primary">Track order</a> <a href="#" class="btn btn-light"> Details </a> </td>
			</tr>
		</tbody></table>
		</div> <!-- table-responsive .end// -->
		</article> <!-- order-group.// -->
	</main>
</div>

<script>

function backendServer() {
  const domain = window.location.hostname.toString();
  console.log("Domain: ", domain)
  if (domain == "scanngo-frontend-app.azurewebsites.net") {
    var backendServerURL = "https://scanngo-backend-app.azurewebsites.net/";
  }
  else if ( (domain == "127.0.0.1") || (domain == "localhost") || (domain == "0.0.0.0") ) {
    var backendServerURL = "http://127.0.0.1:8000/";
    }
  else {
    alert("ERROR: Cannot determine Backend Server (Django) URL");
    }

  console.log('Backend Server URL', backendServerURL)
  return backendServerURL
}

function Username() {
  var username = sessionStorage.getItem('username')
  return username
}
function Useremail() {
  var useremail = sessionStorage.getItem('email')
  return useremail
}

function GetUserOrder() {
    let backendServerURL = backendServer()
    let djangoServer = backendServerURL + "orders/"
    let token = sessionStorage.getItem('access').toString()

    let djangoServer_User = backendServerURL + "api_users/"

    let djangoServer_BasketItems = backendServerURL + "basket_items/"

    var obj = {
      method: 'GET',
      headers: {
        'Accept': 'application/json',
        'Content-Type': 'application/json',
        'Origin': '',
        'Host': 'api.producthunt.com',
        'Authorization': 'Bearer ' + token
      },}



    console.log("sending data to ",djangoServer)
    fetch(djangoServer, obj)
      .then(response => response.json()) // extract the json from the response you get from the server
      .then(async (data) => {

          let UserOrderData = data;
          console.log("log",UserOrderData)
          for (var i = 0; i < UserOrderData.length; i++) {
              //console.log(UserOrderData[i]);

              let orderarticle = document.createElement("article");
              orderarticle.className = "card orderarticle";
              let preorderarticle = document.getElementsByClassName("OrderData");
              preorderarticle[0].appendChild((orderarticle));

              let cardheader = document.createElement("header");
              cardheader.className = "card-header cardheader";
              let precardheader = document.getElementsByClassName("orderarticle");
              precardheader[i].appendChild((cardheader));

              let preheaderOrderID = document.getElementsByClassName("cardheader");
              let headerOrderID = document.createElement("strong");
              headerOrderID.className = "d-inline-block mr-3 headerOrderID";
              headerOrderID.appendChild(document.createTextNode("Order ID: " + UserOrderData[i].id));
              preheaderOrderID[i].appendChild((headerOrderID));

              let headerOrderDate = document.createElement("span");
              headerOrderDate.className = "d-inline-block mr-3 headerOrderDate";
              const orderdate = new Date(UserOrderData[i].date_ordered); // 1 for February
              const dateFormatter = new Intl.DateTimeFormat('en-IE');
              headerOrderDate.appendChild(document.createTextNode("Order Date: " + dateFormatter.format(orderdate)));
              preheaderOrderID[i].appendChild((headerOrderDate));

              let cardBody = document.createElement("div");
              cardBody.className = "card-body cardBody";
              let precardBody = document.getElementsByClassName("orderarticle");
              precardBody[i].appendChild((cardBody));

              let cardrow = document.createElement("div");
              cardrow.className = "row cardrow";
              let precardrow = document.getElementsByClassName("cardBody");
              precardrow[i].appendChild((cardrow));

              let precardrows = document.getElementsByClassName("cardrow");
              let deliveryrow = document.createElement("div");
              deliveryrow.className = "col-md-8 deliveryrow";
              precardrows[i].appendChild((deliveryrow));

              let paymentrow = document.createElement("div");
              paymentrow.className = "col-md-4 paymentrow";
              precardrows[i].appendChild((paymentrow));

              let deliverytitle = document.createElement("h6");
              deliverytitle.className = "text-muted deliverytitle";
              deliverytitle.appendChild(document.createTextNode("Delivery"));
              let predeliverytitle = document.getElementsByClassName("deliveryrow");
              predeliverytitle[i].appendChild((deliverytitle));

              let predeliveryinfo = document.getElementsByClassName("deliveryrow");
              let deliveryUser = document.createElement("p");
              deliveryUser.className = "deliveryUser";
              deliveryUser.appendChild(document.createTextNode("Username: " + Username()));
              predeliveryinfo[i].appendChild((deliveryUser));

              let deliveryEmail = document.createElement("p");
              deliveryEmail.className = "deliveryEmail";
              deliveryEmail.appendChild(document.createTextNode("Email: " + Useremail()));
              predeliveryinfo[i].appendChild((deliveryEmail));

              let paymenttitle = document.createElement("h6");
              paymenttitle.className = "text-muted paymenttitle";
              paymenttitle.appendChild(document.createTextNode("Payment"));
              let prepaymenttitle = document.getElementsByClassName("paymentrow");
              prepaymenttitle[i].appendChild((paymenttitle));

              let prepaymentinfo = document.getElementsByClassName("paymentrow");
              let paymentinfo = document.createElement("p");
              paymentinfo.className = "paymentinfo text-success";
              paymentinfo.appendChild(document.createTextNode("Digital Payment"));
              prepaymentinfo[i].appendChild((paymentinfo));

              let paymentTotal = document.createElement("p");
              paymentTotal.className = "paymentTotal";
              paymentTotal.appendChild(document.createTextNode("Total: €" + Useremail()));
              prepaymentinfo[i].appendChild((paymentTotal));

              await fetch(djangoServer_BasketItems, obj)
                  .then(BasketItems_response => BasketItems_response.json()) // extract the json from the response you get from the server
                  .then(basketdata => {
                      let UserBasketItemData = basketdata;
                      for (var j = 0; j < UserBasketItemData.length; j++) {
                           if (UserBasketItemData[j].basket_id_num == UserOrderData[i].basket_id_num) {

                              let receipttable = document.createElement("div");
                              receipttable.className = "table-responsive receipttable";
                              let prereceipttable = document.getElementsByClassName("orderarticle");
                              prereceipttable[i].appendChild((receipttable));

                              let receiptTable = document.createElement("table");
                              receiptTable.className = "table-hover receiptTable";
                              let prereceiptTable = document.getElementsByClassName("receipttable");
                              prereceiptTable[i].appendChild((receiptTable));

                              let Tablebody = document.createElement("tbody");
                              Tablebody.className = "Tablebody";
                              let preTablebody = document.getElementsByClassName("receiptTable");
                              preTablebody[i].appendChild((Tablebody));

                              let Tablebodyitem = document.createElement("tr");
                              Tablebodyitem.className = "Tablebodyitem";
                              let preTablebodyitem = document.getElementsByClassName("Tablebody");
                              preTablebodyitem[i].appendChild((Tablebodyitem));

                              let preTableitem = document.getElementsByClassName("Tablebodyitem");
                              let Tableimage = document.createElement("td");
                              Tableimage.className = "Tableimage";
                              Tableimage.setAttribute("width", "65");
                              preTableitem[i].appendChild((Tableimage));

                              let productimage = document.createElement('img');
                              productimage.className = "img-xs border productimage";
                              productimage.setAttribute("height","50");
                              productimage.setAttribute("width", "50");
                              productimage.setAttribute("src", backendServer() + "media/"+UserBasketItemData[j].product_image);
                              productimage.setAttribute("alt", "Product Image");
                              productimage.setAttribute("id", "productimage");
                              let preproductimage = document.getElementsByClassName("Tableimage");
                              preproductimage[i].appendChild((productimage));
                           }
                      }
                  })
              }
          })
      }
GetUserOrder()


</script>
<%- include('partials/footer.ejs') %>
