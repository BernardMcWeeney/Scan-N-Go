<%- include('partials/head.ejs') %>
<%- include('partials/header.ejs') %>

<%# Start code to determine the origin of the user %>
<% if(didLogOut == 'true'){ %> <%# if user came to this page because they logged out, show this alert %>
<div class="alert alert-warning" role="alert" style="margin-bottom:0px;">
    You've just been logged out! Please log-in to continue using Scan-N-Go
</div>
<% } %>
<% if(didLogOut == 'basketError'){ %> <%# if user came to this page because they werent logged in and tried to access the basket page, show this alert %>
<div class="alert alert-warning" role="alert" style="margin-bottom:0px;">
    Oops! You can't access the basket page if your not logged in. Log-in to access the full functionality of
    Scan-N-Go
</div>
<% } %>
<%# End code to determine the origin of the user %>

<div id="logreg-forms">

    <!-- Login form -->
    <form class="form-signin" id="login-form">
        <h1 class="h3 mb-3 font-weight-normal" style="text-align: center">Login</h1>
        <input type="text" name="username-input" id="inputEmail" class="form-control" placeholder="Your Username"
               required>
        <input type="password" id="inputPassword" name="password-input" class="form-control" placeholder="Your password"
               required>
        <button class="btn btn-success btn-block" type="submit">Login</button>
    </form>
    <a href="#" onclick="showRegistrationContainer();" class="link-light" style='text-align:center;padding-bottom:10px'>Register
        an
        account</a>

    <div id='registrationContainer' style="display:none">
        <hr>
        <h3 style="text-align: center">
            <small class="text-muted ">Register</small>
        </h3>
    <!-- Registration form -->
        <form class="form-signin" id="register-form">
            <input style="margin-bottom:6px;" type="text" name="username-register" id="registerUser"
                   class="form-control" placeholder="Username" required>
            <input style="margin-bottom:6px; type=" text" name="email-register" id="registerEmail" class="form-control"
            placeholder="Email Address" required>
            <input type="password" id="registerPassword" name="password-register" class="form-control"
                   placeholder="Password" required>
            <button style="margin-top:15px;background-color:#630436" class="btn btn-primary btn-block" type="submit"
                    id="btn-register"><i class="fas fa-user-plus"></i>Sign up New Account
            </button>
    </div>
    </form>
</div>
<script>
  // If the user is logged in already, send them to the homepage
  if (isLoggedIn() == true) {
    location.href = '/';
  }

  document.getElementById("basket-navbar-icon").style.display = "none"; // Don't display the basket icon in navbar because user is logged out

  // If the user clicks the link to create a user, the registration form is displayed
  function showRegistrationContainer() {
    document.getElementById('registrationContainer').style = ""
  }

  // Function that returns the backend server URL. This is for the frontend to understand whether it is being run locally or on Azure
  function backendServer() {
    url = window.location.href;
    let domain = (new URL(url));
    if (domain.hostname == "scanngo-frontend-app.azurewebsites.net") {
      var backendServerURL = "https://scanngo-backend-app.azurewebsites.net/";
    } else if ((domain.hostname == "127.0.0.1") || (domain.hostname == "localhost") || (domain.hostname == "0.0.0.0")) {
      var backendServerURL = "http://127.0.0.1:8000/";
    } else if (domain.hostname == "192.168.1.20") {
      var backendServerURL = "http://192.168.1.20:8000/";
    } else {
      alert("ERROR: Cannot determine Backend Server (Django) URL");
    }
    //console.log("domain ", domain)
    //console.log('Backend Server URL', backendServerURL)
    return backendServerURL
  }

  // Function to log in the user
  function logInUser(event) {
    event.preventDefault(); // always prevent default events when using javascript
    // get the value the in the username box
    let username = document.getElementById("inputEmail").value;
    // get the value in the password box
    let password = document.getElementById("inputPassword").value;
    // prevent "" value in password or username input
    if (username == "") {
      alert("Username cannot be null");
    } else if (password == "") {
      alert("Password cannot be null");
    } else {
      uname = document.getElementById("inputEmail").value;
      pword = document.getElementById("inputPassword").value;
      //console.log("Username:", uname, "Password:", pword)
      let url = backendServer() // get the hostname of the backend server
      let backendServerURL1 = backendServer() + "api/token/" // create the URL to call
      //console.log("Sending Login Data to ", backendServerURL1)

      // get the token from the backend server
      fetch(backendServerURL1, {
        method: 'POST',
        headers: {
          'Accept': 'application/json',
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          username: uname,
          password: pword
        })
      })
        .then(response => response.json())
        .then(data => {
          //console.log(data)
          if ('access' in data) {
            let accessToken = data['access'];
            let refreshToken = data['refresh'];
            sessionStorage.setItem("access", accessToken); // write the access token to sessionStorage
            sessionStorage.setItem("refresh", refreshToken); // write the refresh token to sessionStorage
            sessionStorage.setItem("username", uname); // write the username to sessionStorage
            window.location.href = "/store-scanner"; // go to homepage
          } else {
            //console.log(data);
            // if invalid login, alert the user
            alert("username or password invalid");
          }
        });
    }
  };
  let loginForm = document.getElementById("login-form"); // get the form
  loginForm.addEventListener('submit', logInUser); // bind the login function to the submit button

  // Register a user with the given values
  function registerUser(username, email, password) {
    let backendServerURL = backendServer() // get backend server URL
    let djangoServer = backendServerURL + "register/"
    var requestObject = {
      method: 'POST',
      headers: {
        'Accept': 'application/json',
        'Content-Type': 'application/json',
        'Origin': '',
        'Host': 'api.producthunt.com',
      },
      body: JSON.stringify({
        "username": username,
        "password": password,
        "email": email
      })
    }
    //console.log("Sending:", requestObject)
    //console.log("to", djangoServer)

    fetch(djangoServer, requestObject)
      .then((response) => {
        if (response.ok) {
          return response.json();
        } else {
          // throw a error if the response is not 200
          throw new Error('Something went wrong creating the account. Please check your credentials before submitting');
        }
      }) // extract the json from the response you get from the server
      .then(data => {
        //console.log(data);
        // alert the user that their account is created and reload the page
        if (!alert("Successfully created you a User Account! Your details can be checked below (This is top secret, don't show this to anyone!)")) {
          window.location.reload();
        }
        // set the values back to "" on the registration form
        document.getElementById("registerUser").value = ""
        document.getElementById("registerEmail").value = ""
        document.getElementById("registerPassword").value = ""
      })
      // if there is an error, alert the user
      .catch((error) => {
        alert("Error in creating account - Please check the credentials you have used\n\n", error)
      });
  }

  // Validate the registration form values
  function validateRegisterUser(event) {
    event.preventDefault(); // always prevent default events when using javascript
    // get the value the in the username box
    let username = document.getElementById("registerUser").value;
    // get the value in the email box
    let email = document.getElementById("registerEmail").value;
    // get the value in the password box
    let password = document.getElementById("registerPassword").value;
    // prevent "" value in inputs
    if (username == "") {
      alert("Username cannot be null");
    } else if (password == "") {
      alert("Password cannot be null");
    } else if (email == "") {
      alert("Email cannot be null");
    } else {
      // get all values from inputs in registration form
      username = document.getElementById("registerUser").value;
      email = document.getElementById("registerEmail").value;
      password = document.getElementById("registerPassword").value;
      //console.log(username, password, email)
      // register the user
      registerUser(username, email, password)
    }
  };
  let registerForm = document.getElementById("register-form");// get the form
  registerForm.addEventListener('submit', validateRegisterUser); // bind the validator function to the submit button

</script>
<%- include('partials/footer.ejs') %>

