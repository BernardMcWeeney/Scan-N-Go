<%- include('partials/head.ejs') %>
<%- include('partials/header.ejs') %>
<style>
    .invalid-feedback {
        margin-top: 0;
    }
</style>
<%# Start code to determine the origin of the user %>
<% if(didLogOut == 'true'){ %> <%# if user came to this page because they logged out, show this alert %>
<div class="alert alert-warning" role="alert" style="margin-bottom:0px;">
    You've just been logged out! Please log-in to continue using Scan-N-Go
</div>
<% } %>
<% if(didLogOut == 'basketError'){ %> <%# if user came to this page because they werent logged in and tried to access the basket page, show this alert %>
<div class="alert alert-warning" role="alert" style="margin-bottom:0px;">
    Oops! You can't access the basket page if your not logged in. Log-in to access the full functionality of
    Scan-N-Go
</div>
<% } %>
<%# End code to determine the origin of the user %>

<div id="logreg-forms">

    <!-- Login form -->
    <form class="form-signin" id="login-form">
        <h1 class="h3 mb-3 font-weight-normal" style="text-align: center">Login</h1>
        <input type="text" name="username-input" id="inputEmail" class="form-control" placeholder="Your Username" required>
        <input type="password" id="inputPassword" name="password-input" class="form-control" placeholder="Your password" required>
        <button class="btn btn-success btn-block" type="submit">Login</button>
    </form>
    <a href="#" onclick="showRegistrationContainer();" class="link-light" style='text-align:center;padding-bottom:10px'>Register
        an
        account</a>

    <div id='registrationContainer' style="display:none">
        <hr>
        <h3 style="text-align: center">
            <small class="text-muted ">Register</small>
        </h3>
        <!-- Registration form -->
        <form style='width:95%' class="form-signin needs-validation" id="register-form" novalidate>

            <div class="row">

                <div class="col" style="margin-bottom:6px;padding-left: 5px;padding-right: 5px;">
                    <input type="text" class="form-control" name="fname-register" id="fname-register" placeholder="First name" required>
                    <!--<div class="valid-feedback">
                      Looks good!
                    </div>-->
                    <div class="invalid-feedback feedback-pos">
                        Please input your first name
                    </div>
                </div>


                <div class="col" style="margin-bottom:6px;padding-left: 5px;padding-right: 5px;">
                    <input type="text" class="form-control" name="lname-register" id="lname-register" placeholder="Last name" required>
                    <!--<div class="valid-feedback">
                      Looks good!
                    </div>-->
                    <div class="invalid-feedback feedback-pos">
                        Please input your last name
                    </div>
                </div>


            </div>

            <div class="row" style="padding: 0 5px;">
                <div style="margin-bottom:6px;" class="input-group has-validation">
                    <span class="input-group-text" id="inputGroupPrepend">@</span>
                    <input placeholder='Username' type="text" class="form-control" id="registerUser" pattern="[^' ']+" name="username-register" aria-describedby="inputGroupPrepend" required>
                    <div class="invalid-feedback">
                        Please choose a username (No spaces allowed!)
                    </div>
                    <div class="valid-feedback">
                        Looks good!
                    </div>
                </div>

            </div>


            <div class="row" style="margin-bottom:6px;padding: 0 5px;">
                <input type="email" name="email-register" id="registerEmail" class="form-control" placeholder="Email Address" pattern="[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[a-z]{2,4}$" required>
                <!--<div class="valid-feedback feedback-pos">
                    Looks good!
                  </div>-->
                <div class="invalid-feedback feedback-pos">
                    Please input valid email address
                </div>
            </div>

            <div class="row" style="margin-bottom:6px;padding: 0 5px;">
                <input type="password" id="registerPassword" pattern="[^' ']+" name="password-register" class="form-control"
                       placeholder="Password" required>
                <div class="invalid-feedback feedback-pos">
                    Please choose a valid password (No whitespace allowed!)
                </div>
            </div>

            <div class="row" style="margin-bottom:6px;padding: 0 5px;">
                <input type="password" id="registerPasswordRetype" name="password-register-retype" class="form-control"
                       placeholder="Confirm Password" oninput="check(this)" required> <!-- oninput="check(this)"-->
                <div class="invalid-feedback feedback-pos">
                    Please confirm passwords match
                </div>
                <div class="valid-feedback feedback-pos">
                    Passwords match!
                </div>
            </div>

            <div class="row" style="margin-bottom:6px;padding: 0 5px;">
                <input class="form-control" type="file" id="formFile" accept="image/*" required>
                <div class="invalid-feedback">
                    You must upload a personal image to create an account.
                </div>
                <div class="valid-feedback feedback-pos">
                    Looks great!
                </div>
            </div>

            <div class="form-check">
                <input class="form-check-input" type="checkbox" value="" id="invalidCheck" required>
                <label class="form-check-label" for="invalidCheck">
                    Agree to terms and conditions
                </label>

                <div class="invalid-feedback">
                    You must agree before submitting
                </div>
            </div>

            <div class="row" style="padding: 0 5px;">
                <button style="margin-top:15px;background-color:#630436" class="btn btn-primary btn-block" type="submit" id="btn-register"><i class="fas fa-user-plus"></i>Sign up New Account</button>
            </div>
    </form>
    </div>
</div>
<script>
// If the user is logged in already, send them to the homepage
if (isLoggedIn() === true) {
  location.href = '/';
}

// Function that returns the backend server URL. This is for the frontend to understand whether it is being run locally or on Azure
function backendServer() {
  url = window.location.href;
  let domain = (new URL(url));
  if (domain.hostname == "scanngo.ie") {
    var backendServerURL = "https://www.backend.scanngo.ie/";
  } else if (domain.hostname == "www.scanngo.ie") {
    var backendServerURL = "https://www.backend.scanngo.ie/";
  } else if ((domain.hostname == "127.0.0.1") || (domain.hostname == "localhost") || (domain.hostname == "0.0.0.0")) {
    var backendServerURL = "http://127.0.0.1:8000/";
  } else if (domain.hostname == "192.168.1.20") {
    var backendServerURL = "http://192.168.1.20:8000/";
  } else {
    alert("ERROR: Cannot determine Backend Server (Django) URL");
  }
  //console.log("domain ", domain)
  //console.log('Backend Server URL', backendServerURL)
  return backendServerURL
}

// Function to log in the user
function logInUser(event) {
  event.preventDefault(); // always prevent default events when using javascript
  // get the value the in the username box
  let username = document.getElementById("inputEmail").value;
  // get the value in the password box
  let password = document.getElementById("inputPassword").value;
  // prevent "" value in password or username input
  if (username == "") {
    alert("Username cannot be null");
  } else if (password == "") {
    alert("Password cannot be null");
  } else {
    uname = document.getElementById("inputEmail").value;
    pword = document.getElementById("inputPassword").value;
    //console.log("Username:", uname, "Password:", pword)
    let url = backendServer() // get the hostname of the backend server
    let backendServerURL1 = backendServer() + "api/token/" // create the URL to call
    //console.log("Sending Login Data to ", backendServerURL1)

    // get the token from the backend server
    fetch(backendServerURL1, {
      method: 'POST',
      headers: {
        'Accept': 'application/json',
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        username: uname,
        password: pword
      })
    })
      .then(response => response.json())
      .then(data => {
        //console.log(data)
        if ('access' in data) {
          var accessToken = data['access'];
          let refreshToken = data['refresh'];
          sessionStorage.setItem("access", accessToken); // write the access token to sessionStorage
          sessionStorage.setItem("refresh", refreshToken); // write the refresh token to sessionStorage
          sessionStorage.setItem("username", uname); // write the username to sessionStorage// go to homepage
        } else {
          //console.log(data);
          // if invalid login, alert the user
          alert("username or password invalid");
        }
        return fetch(backendServer() + "api_users", {
          method: 'GET',
          headers: {
            'Accept': 'application/json',
            'Content-Type': 'application/json',
            'Authorization': 'Bearer ' + accessToken
          }})
          .then(response => response.json())
          .then(data =>  {
              console.log
              if (new URL(data[0]["owned_store"]).pathname !== "/stores/5/") {
                  sessionStorage.setItem("admin", "true");
                  sessionStorage.setItem("owned_store", new URL(data[0]["owned_store"]).pathname.slice(8,9));
                  window.location.href = "/admin";
              } else {
                  sessionStorage.setItem("admin", "false");
                  window.location.href = "/store-scanner";
              }

          })
      });
  }
};
document.getElementById("basket-navbar-icon").style.display = "none"; // Don't display the basket icon in navbar because user is logged out
let loginForm = document.getElementById("login-form"); // get the form
loginForm.addEventListener('submit', logInUser); // bind the login function to the submit button

function check(input) {
    if (input.value !== document.getElementById('registerPassword').value) {
        input.setCustomValidity('Password Must be Matching.');
    } else {
        // input is valid -- reset the error message
        input.setCustomValidity('');
    }
}


</script>
<%- include('partials/footer.ejs') %>

